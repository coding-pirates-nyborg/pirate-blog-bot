name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Setup Tailscale
      - name: Tailscale
        uses: tailscale/github-action@v3 
        with:
          oauth-client-id: ${{ vars.TS_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_CLIENT_SECRET }}
          tags: tag:ci
          version: latest
          
      # Wait for Tailscale to be ready
      - name: Wait for Tailscale
        run: sleep 10
        
      # Add server's host key to known_hosts
      - name: Setup SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ vars.SLACK_BOT_HOST }} >> ~/.ssh/known_hosts
          
      # Deploy using SSH over Tailscale
      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ vars.SSH_USER }}
          SERVER_HOST: ${{ vars.SLACK_BOT_HOST }}
        run: |
          # Setup SSH key
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # Copy files to server
          ssh $SSH_USER@$SLACK_BOT_HOST 'mkdir -p ~/slack-bot'
          scp -r ./* $SSH_USER@$SLACK_BOT_HOST:~/slack-bot/
          
          # Deploy using Docker Compose
          ssh $SSH_USER@$SLACK_BOT_HOST << 'EOF'
            cd ~/slack-bot
            docker-compose down
            docker-compose up -d --build
            docker system prune -f
          EOF 
